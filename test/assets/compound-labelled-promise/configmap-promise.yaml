apiVersion: platform.kratix.io/v1alpha1
kind: Promise
metadata:
  name: configmappromise
  labels:
    kratix.io/promise-version: v1.0.0-beta.1
spec:
  destinationSelectors: []
  api:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      name: configmappromises.marketplace.kratix.io
    spec:
      group: marketplace.kratix.io
      names:
        kind: configmappromise
        plural: configmappromises
        singular: configmappromise
      scope: Namespaced
      versions:
        - name: v1
          schema:
            openAPIV3Schema:
              properties:
                spec:
                  properties: {}
                  type: object
              type: object
          served: true
          storage: true
  workflows:
    resource:
      configure:
        - apiVersion: platform.kratix.io/v1alpha1
          kind: Pipeline
          metadata:
            name: resource-configure
          spec:
            containers:
              - name: resource-configure
                image: ghcr.io/syntasso/kratix-pipeline-utility:v0.0.1
                command: ["sh"]
                args:
                  - -c
                  - |
                    set -eux
                    name=$(yq '.metadata.name' /kratix/input/object.yaml)
                    
                    kubectl create configmap ${name} --namespace=default --dry-run=client --output=yaml > /kratix/output/configmap.yaml          
status: {}